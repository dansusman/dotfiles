#!/usr/bin/env bash

set -euo pipefail

# Show usage/help message
show_usage() {
    echo "Usage: claude-start <issue_number>"
    echo ""
    echo "Start working on a GitHub issue with Claude."
    echo ""
    echo "Arguments:"
    echo "  issue_number    The GitHub issue number to start working on"
    echo ""
    echo "Options:"
    echo "  -h, --help     Show this help message"
    echo ""
    echo "Example:"
    echo "  claude-start 123"
}

# Check for help flag
if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
    show_usage
    exit 0
fi

# Check if issue number is provided
if [[ $# -eq 0 || -z "${1:-}" ]]; then
    echo "Error: Issue number is required"
    echo ""
    show_usage
    exit 1
fi

issue=$1

claude \
  "Start working on issue #$issue
- Keep an open mind. Feel free to reconsider the proposed approach
- Use context7 for updated docs
- Don't go out of your way to keep everything backwards compatible. Rather investigate if we can change things once and for all
- Update the issue as you discover new relevant information, make progress or decisions
- After you're done, read through your changes and see if there are things that can be simplified and remove any unused code or obsolete code paths
- Finally, make a commit with your changes but do not push to remote." \
  --allowedTools "Edit" "Write" "Read" \
  "Bash(gh:*)" "Bash(rg:*)" "Bash(find:*)" "Bash(ls:*)" "Bash(grep:*)" "context7:*" \
  "Bash(bin/format:*)" "Bash(bin/check:*)" \
  "Bash(git:*)"
